[gd_resource type="ShaderMaterial" load_steps=3 format=1]

[ext_resource path="res://objects/images/Water-Specular.png" type="Texture" id=1]

[sub_resource type="MaterialShader" id=1]

_code = {
"fragment": "// Define uniforms
uniform color water_color;
uniform float color_ratio;
uniform texture specular_map;
uniform texture highlight_map;
uniform vec2 abberation_r;
uniform vec2 abberation_g;
uniform vec2 abberation_b;
uniform vec2 tex_scale;

// Soft light function
vec3 soft_light(vec3 base, vec3 blend) {
    vec3 limit = step(.5, blend);
    return mix(vec3(2.0) * base * blend + base * base * (vec3(1.0) - vec3(2.0) * blend),
        sqrt(base) * (vec3(2.0) * blend - vec3(1.0)) - (vec3(2.0) * base) * 
        (vec3(1.0) - blend), limit);
}

// Refract specular map
vec2 uv = UV * tex_scale;
uv.x += sin(TIME + (UV.x + UV.y) * 25) * .01;
uv.y += cos(TIME + (UV.x - UV.y) * 25) * .01;

// Refract screen texture
vec2 suv = SCREEN_UV;
suv.x += sin(TIME + (SCREEN_UV.x + SCREEN_UV.y) * 25) * .01;
suv.y += cos(TIME + (SCREEN_UV.x - SCREEN_UV.y) * 25) * .01;

// Apply chromatic abberation
float r = tex(specular_map, uv + abberation_r + vec2(TIME * .05)).r;
float g = tex(specular_map, uv + abberation_g + vec2(TIME * .05)).g;
float b = tex(specular_map, uv + abberation_b + vec2(TIME * .05)).b;

vec3 blended = soft_light(texscreen(suv).rgb, vec3(r, g, b));

// Add water tint to screen texture and pass specular value to light shader
DIFFUSE = mix(blended, vec3(water_color.r, water_color.g, water_color.b), color_ratio);
SPECULAR = tex(specular_map, uv).rgb;
",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[resource]

flags/visible = true
flags/double_sided = false
flags/invert_faces = false
flags/unshaded = false
flags/on_top = false
flags/lightmap_on_uv2 = true
flags/colarray_is_srgb = false
params/blend_mode = 0
params/depth_draw = 1
params/line_width = 0.0
shader/shader = SubResource( 1 )
shader_param/water_color = Color( 0.45702, 0.694588, 1, 1 )
shader_param/color_ratio = 0.25
shader_param/specular_map = ExtResource( 1 )
shader_param/highlight_map = ExtResource( 1 )
shader_param/abberation_r = Vector2( 0, 0 )
shader_param/abberation_g = Vector2( 0, 0 )
shader_param/abberation_b = Vector2( 0, 0 )
shader_param/tex_scale = Vector2( 2, 2 )

